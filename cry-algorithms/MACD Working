class Functions

  @macd: (data, fast_period, slow_period, signal_period) ->
    results = talib.MACD
      inReal: data
      startIdx: 0
      endIdx: data.length - 1
      optInFastPeriod: fast_period
      optInSlowPeriod: slow_period
      optInSignalPeriod: signal_period
    result =
      macd: _.last(results.outMACD)
      signal: _.last(results.outMACDSignal)
      histogram: _.last(results.outMACDHist)
    result


init: (context) ->
  context.invested = null

handle: (context, data) ->
  # get instrument
  instrument = data.instruments[0]

  result = data.instruments[0].macd(12,26,9)

  plot
    MACD: result.macd
      # SIGNAL: signal
      # HISTOGRAM: histogram

  if result.macd < result.signal
    buy(instrument)
  else
    sell(instrument)

  debug "MACD=#{result.macd} Signal=#{result.signal} Histogram=#{result.histogram}"


