###
- Modified by wild0wnes for cleaner debugging readout
- enjoy 


CHERRYB*TCH Slope Bot  v3.0.w

*easy adjustability*
*tune for any pair, candle size, or market*
*basic noob tune to illustrate functionality*


by request for user "cherrybitch"


January 20th, 2014
**************************************************************************************

Donations Appreciated!!!

LTC: LhqNNDa76NcEf7EWQVmDTeoy3MiENhpAJv
BTC: 1HAzXcrWcD4vxQ7kefESgj6PjqmGUQ5PdH


much thanks,

litepresence

**************************************************************************************
###


#@ema_previous Module by Ken
class Functions
  @ema_previous: (data, period) ->
    results = talib.EMA
      inReal: data
      startIdx: 0
      endIdx: data.length - 2
      optInTimePeriod: period
    _.last(results)   
init: (context) ->
#DON'T MESS w/ this part
#@ema_previous Module by Ken
    context.invested = null




#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# USER CONTROL PANEL
    
    # Buying Slope
    context.BUY_min  = -0.3   #-0.3 #Start buying at this slope   
    context.BUY_max  = 0.1    #0.1  #Stop buying at this slope
    
    #Selling Slope
    context.SELL_max = -0.3   #-0.3 #Start selling at this slope
    context.SELL_min = -0.6   #-0.6 #Stop selling at this slope
    
    
    context.EMA_L   = 10     #Order Limit EMA; EMA(2) for 2h
    context.EMA     = 40     #Slope EMA; EMA(5) for 2h
    
    # % above and below Limit EMA to buy and sell
    context.B_limit = 1      #1.002 for more consistant orders
    context.S_limit = 1      #0.998 for more consistant orders
 
    # Minimum balance and buy/sell quantities
    # may use "null" for any of these
    context.bal_min = 2  # if balance < this; sell all market order
    context.B = 0.5      # buy this many units per candle  
    context.S = 1        # sell this many units per candle
    
# /USER CONTROL PANEL
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

        
###

INSPIRATION:

BTCE BTCUSD 2h
2013-11-01 11:25 Simulation started. 
Balance: 5000.00 USD
2014-01-18 15:00 Simulation completed. 
Balance: 135.57352 BTC 
($110,085.70 USD)


BTCE LTCUSD 2h
2013-11-01 11:25 Simulation started. 
Balance: 5000.00 USD
2014-01-18 15:00 Simulation completed. 
Balance: 19082.81 LTC 
($449,375.33 USD)


Properly tuned... this bot is bitchin'

rpfpresence@gmail.com for custom tuning



btce trollbox litepresence
"presence" ronpaulforums.com
@oraclepresence twitter
cryptocat chatroom: "cryptotrader" litepresence
###











###
<<<<   DON'T MESS WITH ANYTHING BELOW HERE   >>>>
###






# PERFORM EACH TICK    
handle: (context, data)->
    instrument = data.instruments[0]
    EMA_LAST = Functions.ema_previous(instrument.close,context.EMA)    
    EMA = instrument.ema(context.EMA)
    LIMIT = instrument.ema(context.EMA_L)
    SLOPE = EMA - EMA_LAST
    balance = portfolio.positions[instrument.asset()].amount
    Cbalance = portfolio.positions[instrument.curr()].amount
 # DRAW
    plot 
        EMA: EMA
        LIMIT: LIMIT
# LOG        
        
# LOGIC
    
    
    if SLOPE > context.BUY_min and SLOPE < context.BUY_max
        if buy(instrument,context.B,(Math.round(context.B_limit*LIMIT*1000))/1000,179)
         debug 'Assets: ' + (Math.floor(balance*1000)/1000) + ' | ' + 'Currency: ' + (Math.floor(Cbalance*1000)/1000)+' |' + ' Buy slope: ' + (Math.round(SLOPE*1000)/1000)
    if SLOPE < context.SELL_max and SLOPE > context.SELL_min
        if sell(instrument,context.S,(Math.round(context.S_limit*LIMIT*1000))/1000,179)
         debug 'Assets: ' + (Math.floor(balance*1000)/1000) + ' | ' + 'Currency: ' + (Math.floor(Cbalance*1000)/1000)+' |' + ' Sell slopeB: ' + (Math.round(SLOPE*1000)/1000)
     if SLOPE < context.SELL_max and SLOPE > context.SELL_min and balance < context.bal_min
        if sell instrument
         debug 'Assets: ' + (Math.floor(balance*1000)/1000) + ' | ' + 'Currency: ' + (Math.floor(Cbalance*1000)/1000)+' |' + ' Sell slopeA: ' + (Math.round(SLOPE*1000)/1000)

# Without the user control panel referencing, spacing, and comments
# this bot squeezes down to about 30 lines of code
#
# Good luck my friends!
